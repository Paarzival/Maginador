/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package marginador;

import java.awt.Image;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author adn
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
        //setIconImage(new ImageIcon(getClass().getResource("../imagenes/LOGO-INTERMERCADO-R-1.png_16x16.png")).getImage());
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        combo.addItem("Magisterio");
        combo.addItem("Burver");
        combo.addItem("Burver Operativos");
        //combo.addItem("IPE");
        txtPercepciones.requestFocus();
        txtDeduccionesLey.setEditable(false);
        
    }
        float suma=0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtPercepciones = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDeducciones = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtLiquido = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        txtBase = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtDeduccionesLey = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Formulario");

        jLabel1.setText("Dependencia: ");

        combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboItemStateChanged(evt);
            }
        });
        combo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboMouseClicked(evt);
            }
        });

        jLabel2.setText("Percepciones fijas: ");

        txtPercepciones.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPercepciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPercepcionesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPercepcionesFocusLost(evt);
            }
        });
        txtPercepciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPercepcionesActionPerformed(evt);
            }
        });

        jLabel3.setText("$");

        jLabel4.setText("Deducciones: ");

        txtDeducciones.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDeducciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDeduccionesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDeduccionesFocusLost(evt);
            }
        });
        txtDeducciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDeduccionesKeyReleased(evt);
            }
        });

        jLabel5.setText("$");

        jLabel6.setText("Líquido Neto:");

        txtLiquido.setEditable(false);
        txtLiquido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLiquido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLiquidoActionPerformed(evt);
            }
        });

        jLabel7.setText("$");

        jLabel8.setText("Base Para Crédito:");

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        txtBase.setEditable(false);
        txtBase.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel9.setText("$");

        jLabel10.setText("Deducciones de ley:");

        jLabel11.setText("$");

        txtDeduccionesLey.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDeduccionesLey.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDeduccionesLeyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDeduccionesLeyFocusLost(evt);
            }
        });
        txtDeduccionesLey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeduccionesLeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(38, 38, 38)
                                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBase, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPercepciones, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(txtLiquido)
                                    .addComponent(txtDeducciones)
                                    .addComponent(txtDeduccionesLey)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(btnCalcular)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPercepciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDeducciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(txtDeduccionesLey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(btnCalcular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPercepcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPercepcionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPercepcionesActionPerformed

    private void txtLiquidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLiquidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLiquidoActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
       String depen = String.valueOf(combo.getSelectedItem());
       suma = Float.parseFloat(txtPercepciones.getText()) - Float.parseFloat(txtDeducciones.getText());
       float liquido= suma;
       float percepciones = Float.parseFloat(txtPercepciones.getText());
       float deducciones= Float.parseFloat(txtDeducciones.getText());
       float deduccionesLey=0;
       if(depen.equals("Burver") || depen.equals("Burver Operativos")){
           deducciones = Float.parseFloat(txtDeduccionesLey.getText());
       }
       float res1=0,res2=0;
       res1 = (float) (liquido * .3);
       res2 = (liquido - (float) (percepciones * .2));
       
       switch(depen){
           case "Magisterio":
                System.out.println(res1);
                System.out.println(res2);
                if(res1 < res2){
                    txtBase.setText(String.valueOf( nf.format(res1)));
                }else{
                    txtBase.setText(String.valueOf(nf.format(res2)));
                }break;
           case "Burver":
                float res3 = ((float) ((percepciones - deduccionesLey)*.5 ) - deducciones);
                System.out.println(res1);
                System.out.println(res2);
                System.out.println(res3);
                if(res1 < res2 && res1 < res3){
                    txtBase.setText(String.valueOf( nf.format(res1)));
                }else if(res2 < res1 && res2 < res3){
                    txtBase.setText(String.valueOf(nf.format(res2)));
                }else if(res3 < res1 && res3 < res2){
                    txtBase.setText(String.valueOf(nf.format(res3)));
                }break;
           case "Burver Operativos":
               float res3O = ((float) ((percepciones - deduccionesLey)*.5 ) - deducciones);
                System.out.println(res1);
                System.out.println(res2);
                System.out.println(res3O);
                if(res1 < res2 && res1 < res3O){
                    txtBase.setText(String.valueOf( nf.format(res1)));
                }else if(res2 < res1 && res2 < res3O){
                    txtBase.setText(String.valueOf(nf.format(res2)));
                }else if(res3O < res1 && res3O < res2){
                    txtBase.setText(String.valueOf(nf.format(res3O)));
                }break;
       }
      
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void txtPercepcionesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPercepcionesFocusLost
        suma();
    }//GEN-LAST:event_txtPercepcionesFocusLost

    private void comboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboMouseClicked
  
    }//GEN-LAST:event_comboMouseClicked

    private void comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboItemStateChanged
        if(combo.getSelectedItem().equals("Burver Operativos") || combo.getSelectedItem().equals("Burver")){
           txtDeduccionesLey.setEditable(true);
        }else{
            txtDeduccionesLey.setEditable(false);
        }
        
        txtPercepciones.setText("");
        txtDeducciones.setText("");
        txtLiquido.setText("");
        txtBase.setText("");
        txtDeduccionesLey.setText("");
        txtPercepciones.requestFocus();
    }//GEN-LAST:event_comboItemStateChanged

    private void txtDeduccionesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesFocusLost
        suma();
    }//GEN-LAST:event_txtDeduccionesFocusLost

    private void txtDeduccionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDeduccionesKeyReleased

    }//GEN-LAST:event_txtDeduccionesKeyReleased

    private void txtDeduccionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesFocusGained
        txtDeducciones.setSelectionStart(0);
        txtDeducciones.setSelectionEnd(txtDeducciones.getText().length());
    }//GEN-LAST:event_txtDeduccionesFocusGained

    private void txtPercepcionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPercepcionesFocusGained
        txtPercepciones.setSelectionStart(0);
        txtPercepciones.setSelectionEnd(txtPercepciones.getText().length());
    }//GEN-LAST:event_txtPercepcionesFocusGained

    private void txtDeduccionesLeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeduccionesLeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeduccionesLeyActionPerformed

    private void txtDeduccionesLeyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesLeyFocusLost
        suma();
    }//GEN-LAST:event_txtDeduccionesLeyFocusLost

    private void txtDeduccionesLeyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesLeyFocusGained
                txtDeduccionesLey.setSelectionStart(0);
                txtDeduccionesLey.setSelectionEnd(txtDeduccionesLey.getText().length());
    }//GEN-LAST:event_txtDeduccionesLeyFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }
    
    public void suma(){
        String depen = String.valueOf(combo.getSelectedItem());
        //obtener valores escritos en txt
        String percep=txtPercepciones.getText();
        String deduc = txtDeducciones.getText();
        String deducLey = txtDeduccionesLey.getText();
        //crear variables locales
        float res=0,percepciones=0,deducciones=0,deduccionesLey=0;
        
        //validacion 
        if(depen.equals("Magisterio")){
            if (!percep.equals("") && !deduc.equals("")) {
            percepciones= Float.parseFloat(percep);
            deducciones = Float.parseFloat(deduc);
            }else{
                if(percep.equals("")){
                    percepciones=0;
                    txtPercepciones.setText("0");
                }else if(deduc.equals("")){
                    deducciones=0;
                    txtDeducciones.setText("0");
                }
            }
            if(deducciones!=0 && deducciones >= percepciones){
                JOptionPane.showConfirmDialog(this, "Revisa las cantidades ingresadas.","Error",JOptionPane.DEFAULT_OPTION);
                txtDeducciones.setText("");
                txtLiquido.setText("");
                txtBase.setText("");
                txtPercepciones.requestFocus();
                txtPercepciones.setSelectionStart(0);
                txtPercepciones.setSelectionEnd(txtPercepciones.getText().length());
            }else{
                res=percepciones-deducciones;
                txtLiquido.setText(String.valueOf(nf.format(res)));
            }
            }else if(depen.equals("Burver Operativos") || depen.equals("Burver")){
                if (!percep.equals("") && !deduc.equals("") && !deducLey.equals("")) {
                percepciones= Float.parseFloat(percep);
                deducciones = Float.parseFloat(deduc);
                deduccionesLey= Float.parseFloat(deducLey);
                }else{
                    if(percep.equals("")){
                        percepciones=0;
                        txtPercepciones.setText("0");
                    }else if(deduc.equals("")){
                        deducciones=0;
                        txtDeducciones.setText("0");
                    }else if(deducLey.equals("")){
                        deduccionesLey=0;
                        txtDeduccionesLey.setText("0");
                    }
                }
                if(deducciones!=0 && deduccionesLey!=0 && deducciones+deduccionesLey >= percepciones){
                    JOptionPane.showConfirmDialog(this, "Revisa las cantidades ingresadas.","Error",JOptionPane.DEFAULT_OPTION);
                    txtDeducciones.setText("");
                    txtLiquido.setText("");
                    txtBase.setText("");
                    txtDeduccionesLey.setText("");
                    txtPercepciones.requestFocus();
                    txtPercepciones.setSelectionStart(0);
                    txtPercepciones.setSelectionEnd(txtPercepciones.getText().length());
                }else{
                    res=percepciones-(deducciones+deduccionesLey);
                    txtLiquido.setText(String.valueOf(nf.format(res)));
                }
            }
    }

    
    Locale locale = new Locale("es","MX");
    NumberFormat nf = NumberFormat.getCurrencyInstance(locale);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JComboBox combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField txtBase;
    private javax.swing.JTextField txtDeducciones;
    private javax.swing.JTextField txtDeduccionesLey;
    private javax.swing.JTextField txtLiquido;
    private javax.swing.JTextField txtPercepciones;
    // End of variables declaration//GEN-END:variables

}
