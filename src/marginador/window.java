/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package marginador;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Anorak
 */
public class window extends javax.swing.JFrame {

    static Point coords;
    /**
     * Creates new form window
     */
    public window() {
        initComponents();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        dispose();
        this.setUndecorated(true);
        getRootPane().setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(53,66,108)));
        this.setVisible(true);
        this.getContentPane().setBackground(Color.WHITE);
        //========================================================//
        txtPercepciones.setText("0.00");
        txtDeducciones.setText("0.00");
        txtDeduccionesLey.setText("0.00");
        txtLiquido.setText("0.00");
        txtBase.setText("0.00");
        combo.addItem("Magisterio");
        combo.addItem("Burver");
        combo.addItem("Burver Operativos");
        //combo.addItem("IPE");
        txtPercepciones.requestFocus();
        //txtDeduccionesLey.setEditable(false);
        
    }
        float suma=0;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        topPanel = new javax.swing.JPanel();
        btnMinimize = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        combo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtPercepciones = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblDeduc3 = new javax.swing.JSeparator();
        lblDeduc1 = new javax.swing.JLabel();
        txtDeducciones = new javax.swing.JTextField();
        lblLey3 = new javax.swing.JSeparator();
        lblLey1 = new javax.swing.JLabel();
        txtDeduccionesLey = new javax.swing.JTextField();
        lblDeduc2 = new javax.swing.JLabel();
        lblLey2 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        txtLiquido = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        btnCalcular = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtBase = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(53, 66, 108));
        jLabel8.setText("$");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        topPanel.setBackground(new java.awt.Color(53, 66, 108));
        topPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnMinimize.setBackground(new java.awt.Color(53, 66, 108));
        btnMinimize.setForeground(new java.awt.Color(255, 255, 255));
        btnMinimize.setText("-");
        btnMinimize.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizeActionPerformed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(53, 66, 108));
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("X");
        btnExit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Margin 2.0");
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMinimize, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(btnMinimize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(53, 66, 108));
        jLabel2.setText("DEPENDENCIA :");

        jSeparator1.setBackground(new java.awt.Color(255, 144, 44));
        jSeparator1.setForeground(new java.awt.Color(255, 144, 44));

        combo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        combo.setForeground(new java.awt.Color(53, 66, 108));
        combo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(53, 66, 108));
        jLabel3.setText("PERCEPCIONES FIJAS :");

        txtPercepciones.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPercepciones.setForeground(new java.awt.Color(53, 66, 108));
        txtPercepciones.setBorder(null);
        txtPercepciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPercepcionesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPercepcionesFocusLost(evt);
            }
        });
        txtPercepciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPercepcionesKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(53, 66, 108));
        jLabel4.setText("$");

        jSeparator2.setForeground(new java.awt.Color(53, 66, 108));

        lblDeduc3.setForeground(new java.awt.Color(53, 66, 108));

        lblDeduc1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblDeduc1.setForeground(new java.awt.Color(53, 66, 108));
        lblDeduc1.setText("DEDUCCIONES :");

        txtDeducciones.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtDeducciones.setForeground(new java.awt.Color(53, 66, 108));
        txtDeducciones.setBorder(null);
        txtDeducciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDeduccionesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDeduccionesFocusLost(evt);
            }
        });

        lblLey3.setForeground(new java.awt.Color(53, 66, 108));

        lblLey1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblLey1.setForeground(new java.awt.Color(53, 66, 108));
        lblLey1.setText("DEDUCCIONES DE LEY :");

        txtDeduccionesLey.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtDeduccionesLey.setForeground(new java.awt.Color(53, 66, 108));
        txtDeduccionesLey.setBorder(null);
        txtDeduccionesLey.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDeduccionesLeyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDeduccionesLeyFocusLost(evt);
            }
        });

        lblDeduc2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblDeduc2.setForeground(new java.awt.Color(53, 66, 108));
        lblDeduc2.setText("$");

        lblLey2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblLey2.setForeground(new java.awt.Color(53, 66, 108));
        lblLey2.setText("$");

        jSeparator5.setBackground(new java.awt.Color(255, 144, 44));
        jSeparator5.setForeground(new java.awt.Color(255, 144, 44));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(53, 66, 108));
        jLabel10.setText("LÍQUIDO NETO :");

        txtLiquido.setEditable(false);
        txtLiquido.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        txtLiquido.setForeground(new java.awt.Color(53, 66, 108));
        txtLiquido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLiquido.setBorder(null);

        jSeparator6.setForeground(new java.awt.Color(53, 66, 108));

        btnCalcular.setBackground(new java.awt.Color(255, 144, 44));
        btnCalcular.setForeground(new java.awt.Color(53, 66, 108));
        btnCalcular.setText("CALCULAR");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(53, 66, 108));
        jLabel12.setText("BASE PARA CRÉDITO :");

        txtBase.setEditable(false);
        txtBase.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        txtBase.setForeground(new java.awt.Color(53, 66, 108));
        txtBase.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBase.setBorder(null);
        txtBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBaseActionPerformed(evt);
            }
        });

        jSeparator7.setForeground(new java.awt.Color(53, 66, 108));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addGap(73, 73, 73)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel4)
                                        .addGap(10, 10, 10)
                                        .addComponent(txtPercepciones, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDeduc1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(lblDeduc2)
                                .addGap(10, 10, 10)
                                .addComponent(txtDeducciones, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDeduc3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLey1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(lblLey2)
                                        .addGap(10, 10, 10)
                                        .addComponent(txtDeduccionesLey, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(lblLey3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel10))
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(btnCalcular))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)))))
                .addGap(0, 30, Short.MAX_VALUE))
            .addComponent(jSeparator1)
            .addComponent(jSeparator5)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(txtBase, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtPercepciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(lblDeduc1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel10)
                        .addGap(6, 6, 6)
                        .addComponent(txtLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDeduc2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtDeducciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDeduc3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(lblLey1)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLey2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtDeduccionesLey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(lblLey3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizeActionPerformed
        this.setState(ICONIFIED);
    }//GEN-LAST:event_btnMinimizeActionPerformed

    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        //btnExit.setBackground(new Color(79,114,110));
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        coords = evt.getPoint();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        coords=null;
    }//GEN-LAST:event_jLabel1MouseReleased

    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        Point currCoords = evt.getLocationOnScreen();
        this.setLocation(currCoords.x - coords.x, currCoords.y - coords.y);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
       // btnExit.setBackground(new Color(65,123,101));
    }//GEN-LAST:event_btnExitMouseExited

    private void txtBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBaseActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed

         String depen = String.valueOf(combo.getSelectedItem());
       suma = Float.parseFloat(txtPercepciones.getText()) - Float.parseFloat(txtDeducciones.getText());
       float liquido= suma;
       float percepciones = Float.parseFloat(txtPercepciones.getText());
       float deducciones= Float.parseFloat(txtDeducciones.getText());
       float deduccionesLey=0;
       if(depen.equals("Burver") || depen.equals("Burver Operativos")){
           deducciones = Float.parseFloat(txtDeduccionesLey.getText());
       }
       float res1=0,res2=0;
       res1 = (float) (liquido * .3);
       res2 = (liquido - (float) (percepciones * .2));
       
       switch(depen){
           case "Magisterio":
                System.out.println(res1);
                System.out.println(res2);
                if(res1 < res2){
                    txtBase.setText(String.valueOf( nf.format(res1)));
                }else{
                    txtBase.setText(String.valueOf(nf.format(res2)));
                }break;
           case "Burver":
                float res3 = ((float) ((percepciones - deduccionesLey)*.5 ) - deducciones);
                System.out.println(res1);
                System.out.println(res2);
                System.out.println(res3);
                if(res1 < res2 && res1 < res3){
                    txtBase.setText(String.valueOf( nf.format(res1)));
                }else if(res2 < res1 && res2 < res3){
                    txtBase.setText(String.valueOf(nf.format(res2)));
                }else if(res3 < res1 && res3 < res2){
                    txtBase.setText(String.valueOf(nf.format(res3)));
                }break;
           case "Burver Operativos":
               float res3O = ((float) ((percepciones - deduccionesLey)*.5 ) - deducciones);
                System.out.println(res1);
                System.out.println(res2);
                System.out.println(res3O);
                if(res1 < res2 && res1 < res3O){
                    txtBase.setText(String.valueOf( nf.format(res1)));
                }else if(res2 < res1 && res2 < res3O){
                    txtBase.setText(String.valueOf(nf.format(res2)));
                }else if(res3O < res1 && res3O < res2){
                    txtBase.setText(String.valueOf(nf.format(res3O)));
                }break;
       }
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void txtPercepcionesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPercepcionesFocusLost
        suma();
    }//GEN-LAST:event_txtPercepcionesFocusLost

    private void txtDeduccionesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesFocusLost
        suma();
    }//GEN-LAST:event_txtDeduccionesFocusLost

    private void txtDeduccionesLeyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesLeyFocusLost
        suma();
    }//GEN-LAST:event_txtDeduccionesLeyFocusLost

    private void txtPercepcionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPercepcionesFocusGained
        txtPercepciones.setSelectionStart(0);
        txtPercepciones.setSelectionEnd(txtPercepciones.getText().length());
    }//GEN-LAST:event_txtPercepcionesFocusGained

    private void txtDeduccionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesFocusGained
        txtDeducciones.setSelectionStart(0);
        txtDeducciones.setSelectionEnd(txtDeducciones.getText().length());
    }//GEN-LAST:event_txtDeduccionesFocusGained

    private void txtDeduccionesLeyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDeduccionesLeyFocusGained
        txtDeduccionesLey.setSelectionStart(0);
        txtDeduccionesLey.setSelectionEnd(txtDeduccionesLey.getText().length());
    }//GEN-LAST:event_txtDeduccionesLeyFocusGained

    private void txtPercepcionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPercepcionesKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_TAB){
           txtDeducciones.requestFocus();
       }
    }//GEN-LAST:event_txtPercepcionesKeyPressed

    private void comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboItemStateChanged
        String depen = String.valueOf(combo.getSelectedItem());
        switch(depen){
            case "Burver Operativos" :
                txtDeduccionesLey.setVisible(true);
                lblLey1.setVisible(true);
                lblLey2.setVisible(true);
                lblLey3.setVisible(true);
                
                txtDeducciones.setVisible(false);
                lblDeduc1.setVisible(false);
                lblDeduc2.setVisible(false);
                lblDeduc3.setVisible(false);
                break;
            case "Burver" : 
                txtDeduccionesLey.setVisible(true);
                lblLey1.setVisible(true);
                lblLey2.setVisible(true);
                lblLey3.setVisible(true);
                
                txtDeducciones.setVisible(true);
                lblDeduc1.setVisible(true);
                lblDeduc2.setVisible(true);
                lblDeduc3.setVisible(true);
                break;
            case "Magisterio" :
                txtDeduccionesLey.setVisible(false);
                lblLey1.setVisible(false);
                lblLey2.setVisible(false);
                lblLey3.setVisible(false);
                
                txtDeducciones.setVisible(true);
                lblDeduc1.setVisible(true);
                lblDeduc2.setVisible(true);
                lblDeduc3.setVisible(true);
                break;
        }
        
        txtPercepciones.setText("0.00");
        txtDeducciones.setText("0.00");
        txtBase.setText("0.00");
        txtLiquido.setText("0.00");
        txtDeduccionesLey.setText("0.00");
        txtPercepciones.requestFocus();
    }//GEN-LAST:event_comboItemStateChanged
                                         
public void suma(){
        String depen = String.valueOf(combo.getSelectedItem());
        //obtener valores escritos en txt
        String percep=txtPercepciones.getText();
        String deduc = txtDeducciones.getText();
        String deducLey = txtDeduccionesLey.getText();
        //crear variables locales
        float res=0,percepciones=0,deducciones=0,deduccionesLey=0;
        
        //validacion 
        switch (depen){
            case "Magisterio" :
                if (!percep.equals("") && !deduc.equals("")) {
                percepciones= Float.parseFloat(percep);
                deducciones = Float.parseFloat(deduc);
                }else{
                    if(percep.equals("")){
                        percepciones=0;
                        txtPercepciones.setText("0.00");
                    }else if(deduc.equals("")){
                        deducciones=0;
                        txtDeducciones.setText("0.00");
                    }
                }
                if(deducciones!=0 && deducciones >= percepciones){
                    JOptionPane.showConfirmDialog(this, "Revisa las cantidades ingresadas.","Error",JOptionPane.DEFAULT_OPTION);
                    txtDeducciones.setText("0.00");
                    txtLiquido.setText("0.00");
                    txtBase.setText("0.00");
                    txtPercepciones.requestFocus();
                    txtPercepciones.setSelectionStart(0);
                    txtPercepciones.setSelectionEnd(txtPercepciones.getText().length());
                }else{
                    res=percepciones-deducciones;
                    txtLiquido.setText(String.valueOf(nf.format(res)));
                }
            break;
            case "Burver" :
                if (!percep.equals("") && !deduc.equals("") && !deducLey.equals("")) {
                percepciones= Float.parseFloat(percep);
                deducciones = Float.parseFloat(deduc);
                deduccionesLey= Float.parseFloat(deducLey);
                }else{
                    if(percep.equals("")){
                        percepciones=0;
                        txtPercepciones.setText("0.00");
                    }else if(deduc.equals("")){
                        deducciones=0;
                        txtDeducciones.setText("0.00");
                    }else if(deducLey.equals("")){
                        deduccionesLey=0;
                        txtDeduccionesLey.setText("0.00");
                    }
                }
                if(deducciones!=0 && deduccionesLey!=0 && deducciones+deduccionesLey >= percepciones){
                    JOptionPane.showConfirmDialog(this, "Revisa las cantidades ingresadas.","Error",JOptionPane.DEFAULT_OPTION);
                    txtDeducciones.setText("0.00");
                    txtLiquido.setText("0.00");
                    txtBase.setText("0.00");
                    txtDeduccionesLey.setText("0.00");
                    txtPercepciones.requestFocus();
                    txtPercepciones.setSelectionStart(0);
                    txtPercepciones.setSelectionEnd(txtPercepciones.getText().length());
                }else{
                    res=percepciones-(deducciones+deduccionesLey);
                    txtLiquido.setText(String.valueOf(nf.format(res)));
                }
            break;
            case "Burver Operativos" :
                if (!percep.equals("") && !deducLey.equals("")) {
                percepciones= Float.parseFloat(percep);
                deduccionesLey= Float.parseFloat(deducLey);
                }else{
                    if(percep.equals("")){
                        percepciones=0;
                        txtPercepciones.setText("0.00");
                    }else if(deducLey.equals("")){
                        deduccionesLey=0;
                        txtDeduccionesLey.setText("0.00");
                    }
                }
                if(deduccionesLey!=0 && deduccionesLey >= percepciones){
                    JOptionPane.showConfirmDialog(this, "Revisa las cantidades ingresadas.","Error",JOptionPane.DEFAULT_OPTION);
                    
                    txtLiquido.setText("0.00");
                    txtBase.setText("0.00");
                    txtDeduccionesLey.setText("0.00");
                    txtPercepciones.requestFocus();
                    txtPercepciones.setSelectionStart(0);
                    txtPercepciones.setSelectionEnd(txtPercepciones.getText().length());
                }else{
                    res=percepciones-(deducciones+deduccionesLey);
                    txtLiquido.setText(String.valueOf(nf.format(res)));
                }
            break;
        }
    }

    
    Locale locale = new Locale("es","MX");
    NumberFormat nf = NumberFormat.getCurrencyInstance(locale);

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new window().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMinimize;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel lblDeduc1;
    private javax.swing.JLabel lblDeduc2;
    private javax.swing.JSeparator lblDeduc3;
    private javax.swing.JLabel lblLey1;
    private javax.swing.JLabel lblLey2;
    private javax.swing.JSeparator lblLey3;
    private javax.swing.JPanel topPanel;
    private javax.swing.JTextField txtBase;
    private javax.swing.JTextField txtDeducciones;
    private javax.swing.JTextField txtDeduccionesLey;
    private javax.swing.JTextField txtLiquido;
    private javax.swing.JTextField txtPercepciones;
    // End of variables declaration//GEN-END:variables
}
